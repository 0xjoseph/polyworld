#!/usr/bin/env bash

function err() {
    echo $* 1>&2
    exit 1
}

if [ $# != 3 ]; then
    err "usage: $0 CXX CXXFLAGS LIBS"
fi

cxx=$1
if ! which $cxx &> /dev/null; then
    err "Cannot locate ${cxx}"
fi

cxxflags="$2"
libs="$3"
    
dir=$(mktemp -d) || exit 1
cd $dir

cat > main.cc <<EOF
#include <omp.h>
#include <stdio.h>
#include <stdlib.h>

int main() {
  unsigned n = omp_get_max_threads();
  bool called[n];
  for(unsigned i = 0; i < n; i++) called[i] = false;
  
#pragma omp parallel for
  for(unsigned i = 0; i < n; i++) {
    called[omp_get_thread_num()] = true;
  }

  for(unsigned i = 0; i < n; i++) {
    if(!called[i]) {
      fprintf(stderr, "Not called by thread %u\n", i);
      exit(1);
    }
  }
}
EOF

supported=false

if $cxx -o main main.cc $cxxflags $ldflags &> /dev/null; then
    if ./main &> /dev/null; then
        supported=true
    fi
fi

rm -rf $dir

if $supported; then
    exit 0
else
    exit 1
fi